import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,a as e,o as n}from"./app-DJgFtDFQ.js";const l={};function h(t,i){return n(),a("div",null,i[0]||(i[0]=[e(`<h1 id="go语言依赖管理" tabindex="-1"><a class="header-anchor" href="#go语言依赖管理"><span>Go语言依赖管理</span></a></h1><p>在工程代码中，每种语言基本上都有自己的依赖管理工具，比如python的<code>pip</code>、node.js的<code>npm</code>，java的<code>maven</code>，rust的<code>cargo</code>，Go语言也有提供自己的依赖库管理工具。Go语言从v1.5开始开始引入vendor模式，如果项目目录下有vendor目录，那么go工具链会优先使用vendor内的包进行编译、测试等。在go1.11之后，Go语言主要使用<code>Go modules</code>对代码依赖进行管理。</p><h2 id="go-modules要点" tabindex="-1"><a class="header-anchor" href="#go-modules要点"><span>Go Modules要点</span></a></h2><h3 id="go111module环境变量" tabindex="-1"><a class="header-anchor" href="#go111module环境变量"><span>GO111MODULE环境变量</span></a></h3><p>这个环境变量是Go Modules的开关，主要有以下参数：</p><ul><li>auto：只在项目包含了<code>go.mod</code>文件时启动go modules，在Go1.13版本中是默认值</li><li>on：无脑启动Go Modules，推荐设置，Go1.14版本以后的默认值</li><li>off：禁用Go Modules，一般没有使用<code>go modules</code>的工程使用；</li></ul><h3 id="goproxy" tabindex="-1"><a class="header-anchor" href="#goproxy"><span>GOPROXY</span></a></h3><p>该环境变量用于设置Go模块代理，Go后续在拉取模块版本时能够脱离传统的VCS方式从镜像站点快速拉取，<code>GOPROXY</code>的值要以英文逗号分割，默认值是<code>https://proxy.golang.org,direct</code>，但是该地址在国内无法访问，所以可以使用<code>goproxy.cn</code>来代替(七牛云配置)，设置命令：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">go</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> env</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -w</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> GOPROXY=https://goproxy.cn,direct</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>也可以使用其他配置，例如阿里配置：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">go</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> env</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -w</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> GOPROXY=https://mirrors.aliyun.com/goproxy/</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>该环境变量也可以关闭，可以设置为&quot;off&quot;，禁止Go在后续操作中使用任何Go module proxy；<br> 上面的配置中我们用逗号分割后面的值是<code>direct</code>，它是什么意思呢？<br><code>direct</code>为特殊指示符，因为我们指定了镜像地址，默认是从镜像站点拉取，但是有些库可能不存在镜像站点中，<code>direct</code>可以指示Go回源到模块版本的源地址去抓取，比如<code>github</code>，当<code>go module proxy</code>返回<code>404、410</code>这类错误时，其会自动尝试列表中的下一个，遇见<code>direct</code>时回源地址抓取；</p><h3 id="gosumdb" tabindex="-1"><a class="header-anchor" href="#gosumdb"><span>GOSUMDB</span></a></h3><p><code>GOSUMDB</code>（go checksum database）是Go官方为了go modules安全考虑，设定的module校验数据库，你在本地对依赖进行变动（更新/添加）操作时，Go 会自动去这个服务器进行数据校验，保证你下的这个代码库和世界上其他人下的代码库是一样的，保证Go在拉取模块版本时拉取到的模块版本数据未经篡改</p><p>GOSUMDB的值自定义格式如下：</p><ul><li>格式 1：&lt;SUMDB_NAME&gt;+&lt;PUBLIC_KEY&gt;。</li><li>格式 2：&lt;SUMDB_NAME&gt;+&lt;PUBLIC_KEY&gt; &lt;SUMDB_URL&gt;。</li></ul><p><code>GOSUMDB</code>的默认值是<code>sum.golang.org</code>，默认值与自定义值的格式不一样，默认值在国内是无法访问，这个值我们一般不用动，因为我们一般已经设置好了<code>GOPROXY</code>，<code>goproxy.cn</code>支持代理<code>sum.golang.org</code>;<br> 所以，环境变量<code>GOSUMDB</code>可以用来配置你使用哪个校验服务器和公钥来做依赖包的校验<br> 但是在使用的时候需要注意，如果你的代码仓库或者模块是私有的，那么它的校验值不应该出现在互联网的公有数据库里面，但是我们本地编译的时候默认所有的依赖下载都会去尝试做校验，这样不仅会校验失败，更会泄漏一些私有仓库的路径等信息，我们可以使用<code>GONOSUMDB</code>这个环境变量来设置不做校验的代码仓库， 它可以设置多个匹配路径，用逗号相隔.</p><p>例如：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">go</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> env</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -w</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> GONOSUMDB=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">*</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">.example.com,test.xyz/com</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>这样的话，像 <code>git.example.com</code>, <code>test.xyz/com</code> 这些公司和自己的私有仓库就都不会做校验了。</p><h3 id="gonoproxy-gonosumdb-goprivate" tabindex="-1"><a class="header-anchor" href="#gonoproxy-gonosumdb-goprivate"><span>GONOPROXY/GONOSUMDB/GOPRIVATE</span></a></h3><p>这三个环境变量放在一起说，一般在项目中不经常使用，这三个环境变量主要用于私有模块的拉取，在GOPROXY、GOSUMDB中无法访问到模块的场景中，例如拉取git上的私有仓库；<br> GONOPROXY、GONOSUMDB的默认值是GOPRIVATE的值，所以我们一般直接使用GOPRIVATE即可，其值也是可以设置多个，以英文逗号进行分割；例如：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">go</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> env</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -w</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> GOPRIVATE=&quot;github.com/asong2020/go-localcache,git.xxxx.com&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>也可以使用通配符的方式进行设置，对域名设置通配符号，这样子域名就都不经过<code>Go module proxy</code>和<code>Go checksum database</code></p><h3 id="全局缓存" tabindex="-1"><a class="header-anchor" href="#全局缓存"><span>全局缓存</span></a></h3><p><code>go mod download</code>会将依赖缓存到本地，缓存的目录是<code>GOPATH/pkg/mod/cache</code>、<code>GOPATH/pkg/sum</code>，这些缓存依赖可以被多个项目使用，未来可能会迁移到<code>$GOCACHE</code>下面；<br> 可以使用<code>go clean -modcache</code>清理所有已缓存的模块版本数据；</p><h2 id="go-modules命令" tabindex="-1"><a class="header-anchor" href="#go-modules命令"><span>Go Modules命令</span></a></h2><p>我们可以使用<code>go help mod</code>查看可以使用的命令：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">go</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> help</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> mod</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Go</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> mod</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> provides</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> access</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> to</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> operations</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> on</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> modules.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Note</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> that</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> support</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> for</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> modules</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> is</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> built</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> into</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> all</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> the</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> go</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> commands,</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">not</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> just</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;go mod&#39;.</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> For</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> example,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> day-to-day</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> adding,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> removing,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> upgrading,</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">and</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> downgrading</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> of</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> dependencies</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> should</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> be</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> done</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> using</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;go get&#39;.</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">See</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;go help modules&#39;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> for</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> an</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> overview</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> of</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> module</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> functionality.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Usage:</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">        go</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> mod</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">comman</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">d&gt; [arguments]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">The</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> commands</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> are:</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">        download</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    download</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> modules</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> to</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> local</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> cache</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">        edit</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">        edit</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> go.mod</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> from</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> tools</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> or</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> scripts</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">        graph</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">       print</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> module</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> requirement</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> graph</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">        init</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">        initialize</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> new</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> module</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> in</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> current</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> directory</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">        tidy</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">        add</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> missing</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> and</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> remove</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> unused</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> modules</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">        vendor</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">      make</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> vendored</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> copy</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> of</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> dependencies</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">        verify</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">      verify</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> dependencies</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> have</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> expected</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> content</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">        why</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">         explain</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> why</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> packages</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> or</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> modules</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> are</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> needed</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Use</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;go help mod &lt;command&gt;&quot;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> for</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> more</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> information</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> about</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> a</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> command.</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><table><thead><tr><th>命令</th><th>作用</th></tr></thead><tbody><tr><td>go mod init</td><td>生成go.mod文件</td></tr><tr><td>go mod download</td><td>下载go.mod文件中指明的所有依赖放到全局缓存</td></tr><tr><td>go mod tidy</td><td>整理现有的依赖，添加缺失或移除不使用的modules</td></tr><tr><td>go mod graph</td><td>查看现有的依赖结构</td></tr><tr><td>go mod edit</td><td>编辑go.mod文件</td></tr><tr><td>go mod vendor</td><td>导出项目所有的依赖到vendor目录</td></tr><tr><td>go mod verify</td><td>校验一个模块是否被篡改过</td></tr><tr><td>go mod why</td><td>解释为什么需要依赖某个模块</td></tr></tbody></table><h3 id="go-mod文件" tabindex="-1"><a class="header-anchor" href="#go-mod文件"><span>go.mod文件</span></a></h3><p><code>go.mod</code>是启用Go modules的项目所必须且最重要的文件，其描述了当前项目的元信息，每个<code>go.mod</code>文件开头符合包含如下信息：</p><p><strong>module</strong>：用于定义当前项目的模块路径（突破$GOPATH路径）<br><strong>go</strong>：当前项目Go版本，目前只是标识作用<br><strong>require</strong>：用于设置一个特定的模块版本<br><strong>exclude</strong>：用于从使用中排除一个特定的模块版本<br><strong>replace</strong>：用于将一个模块版本替换为另外一个模块版本，例如chromedp使用<a href="https://golang.org/x/image" target="_blank" rel="noopener noreferrer">golang.org/x/image</a>这个package一般直连是获取不了的，但是它有一个<a href="https://github.com/golang/image" target="_blank" rel="noopener noreferrer">github.com/golang/image</a>的镜像，所以我们要用replace来用镜像替换它<br><strong>retract</strong>：用来声明该第三方模块的某些发行版本不能被其他模块使用，在Go1.16引入</p><p>示例如下：</p><div class="language-go line-numbers-mode" data-highlighter="shiki" data-ext="go" data-title="go" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">module</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> rotatebot</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">go</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1.17</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">require</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">   github</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">com</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">gin</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">-</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">gonic</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">gin</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> v1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">8.1</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">   github</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">com</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">sirupsen</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">logrus</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> v1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">9.0</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">   gorm</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">io</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">driver</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">sqlite</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> v1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">4.3</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">   gorm</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">io</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">gorm</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> v1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">24.2</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">require</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">   github</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">com</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">gin</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">-</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">contrib</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">sse</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> v0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1.0</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> // indirect</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">   github</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">com</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">/</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">go</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">-</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">playground</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">locales</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> v0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">14.0</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> // indirect</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">exclude</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">   github</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">com</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">json</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">-</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">iterator</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">/</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">go</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> v1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1.12</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">replace</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">   github</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">com</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">modern</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">-</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">go</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">concurrent</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> v0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0.0</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">-</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">20180306012644</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">-</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">bacd9c7ef1dd</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> ==&gt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> github</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">com</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">modern</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">-</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">go</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">concurrent</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> v0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0.0</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">-</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">20190606011245</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">-</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">iyfhlkiuhydg</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">retract</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> v0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">2.0</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>假设我们有上述<code>go.mod</code>文件，接下来我们分模块详细介绍一下各个部分</p><h3 id="module" tabindex="-1"><a class="header-anchor" href="#module"><span>module</span></a></h3><p><code>go.mod</code>文件的第一行是<code>module</code>， 表示工程里的依赖的基路径，例如上面的项目：</p><div class="language-go line-numbers-mode" data-highlighter="shiki" data-ext="go" data-title="go" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">module</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> rotatebot</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>工程里的<code>import</code>的路径都是以<code>rotatebot</code>开头的字符串</p><h3 id="go-version" tabindex="-1"><a class="header-anchor" href="#go-version"><span>go version</span></a></h3><p><code>go.mod</code>文件的第二行是<code>go version</code>，其是用来指定你的代码所需要的最低版本：</p><div class="language-go line-numbers-mode" data-highlighter="shiki" data-ext="go" data-title="go" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">go</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1.17</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="require" tabindex="-1"><a class="header-anchor" href="#require"><span>require</span></a></h3><p><code>require</code>用来指定该项目所需要的各个依赖库以及他们的版本，从上面的例子中我们看到版本部分有不同的写法，还有注释，接下来我们来解释一下这部分；</p><h4 id="indirect注释" tabindex="-1"><a class="header-anchor" href="#indirect注释"><span>indirect注释</span></a></h4><div class="language-go line-numbers-mode" data-highlighter="shiki" data-ext="go" data-title="go" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">github</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">com</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">gin</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">-</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">contrib</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">sse</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> v0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1.0</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> // indirect</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">github</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">com</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">/</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">go</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">-</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">playground</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">locales</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> v0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">14.0</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> // indirect</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>以下场景才会添加<code>indirect</code>注释：</p><ul><li>当前项目依赖包A，A又依赖包B，但是A的 <code>go.mod</code>文件中缺失B，所以在当前项目<code>go.mod</code>中补充B并添加<code>indirect</code>注释</li><li>当前项目依赖包A，A又依赖包B，但是依赖包A没有<code>go.mod</code>文件，所以在当前项目<code>go.mod</code>中补充B并添加<code>indirect</code>注释</li><li>当前项目依赖包A，A又依赖包B，当依赖包A降级不再依赖B时，这个时候就会标记indirect注释，可以执行go mod tidy移除该依赖；</li></ul><p>Go1.17版本对此做了优化，<code>indirect</code>的module将被放在单独<code>require</code>块的，这样看起来更加清晰明了。</p><h4 id="incompatible标记" tabindex="-1"><a class="header-anchor" href="#incompatible标记"><span>incompatible标记</span></a></h4><p><code>incompatible</code>标记其实是一个module标签归规范约束，Go module 的版本选择机制规定，Module 的版本号需要遵循 v&lt;major&gt;.&lt;minor&gt;.&lt;patch&gt; 的格式，此外，如果major版本号大于<code>1</code>时，其版本号还需要体现在Module名字中。<br> 比如<a href="https://github.com/RainbowMango/m" target="_blank" rel="noopener noreferrer">Module github.com/RainbowMango/m</a>，如果其版本号增长到 v2.x.x 时，其 Module 名字也需要相应的改变为：<a href="https://github.com/RainbowMango/m/v2" target="_blank" rel="noopener noreferrer">github.com/RainbowMango/m/v2</a>。即，如果major版本号大于<code>1</code>时，需要在Module名字中体现版本。<br> 那么如果 Module 的 major 版本号虽然变成了 v2.x.x，但 Module 名字仍保持原样会怎么样呢？ 其他项目是否还可以引用呢？<br> 假设<a href="https://github.com/gin-contrib/sse" target="_blank" rel="noopener noreferrer">github.com/gin-contrib/sse</a>的当前版本为v3.5.0，按照Go module 的版本选择机制，其 Module 名字需要相应的改变为： <a href="https://github.com/gin-contrib/sse/releases/tag/v3.5.0" target="_blank" rel="noopener noreferrer">github.com/gin-contrib/sse/v3</a>，但是如果module名没改，还是<a href="https://github.com/gin-contrib/sse" target="_blank" rel="noopener noreferrer">github.com/gin-contrib/sse</a>，则在被形目引用的时候，就会在后面加上incompatible标记，变成</p><div class="language-go line-numbers-mode" data-highlighter="shiki" data-ext="go" data-title="go" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">require</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">        github</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">com</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">gin</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">-</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">contrib</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">sse</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> v3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">6.0</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">+</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">incompatible</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>除了增加 +incompatible（不兼容）标识外，在其使用上没有区别</p><h4 id="版本号" tabindex="-1"><a class="header-anchor" href="#版本号"><span>版本号</span></a></h4><p>go module拉取依赖包本质也是go get行为，go get主要提供了以下命令：</p><table><thead><tr><th>命令</th><th>作用</th></tr></thead><tbody><tr><td>go get</td><td>拉取依赖，会进行指定性拉取（更新），并不会更新所依赖的其它模块</td></tr><tr><td>go get -u</td><td>更新现有的依赖，会强制更新它所依赖的其它全部模块，不包括自身</td></tr><tr><td>go get -u -t ./...</td><td>更新所有直接依赖和间接依赖的模块版本，包括单元测试中用到的</td></tr></tbody></table><p>go get拉取依赖包取决于依赖包是否有发布的tags：</p><ol><li>拉取的依赖包没有发布tags <ul><li>默认取主分支最近一次的commit的commit hash，生成一个伪版本号</li></ul></li><li>拉取的依赖包有发布tags <ul><li>如果只有单个模块，那么就取主版本号最大的那个tag</li><li>如果有多个模块，则推算相应的模块路径，取主版本号最大的那个tag</li></ul></li></ol><p>没有发布的tags：</p><div class="language-go line-numbers-mode" data-highlighter="shiki" data-ext="go" data-title="go" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">github</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">com</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">modern</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">-</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">go</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">concurrent</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> v0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0.0</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">-</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">20180306012644</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">-</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">bacd9c7ef1dd</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>v0.0.0：根据commit的base version生成的：</p><ul><li>如果没有base version，那么就是vx.0.0的形式</li><li>如果base version是一个预发版本，那么就是vx.y.z-pre.0的形式</li><li>如果base version是一个正式发布的版本，那么它就patch号加1，就是vx.y.(z+1)-0的形式</li></ul><p>20190718012654：是这次提交的时间，格式是yyyyMMddhhmmss<br> fb15b899a751：是这个版本的commit id，通过这个可以确定这个库的特定的版本</p><p>有发布的tags：</p><div class="language-go line-numbers-mode" data-highlighter="shiki" data-ext="go" data-title="go" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">github</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">com</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">gin</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">-</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">contrib</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">sse</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> v0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1.0</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="replace" tabindex="-1"><a class="header-anchor" href="#replace"><span>replace</span></a></h3><p>因为某些未知原因，并不是所有的包都能直接用<code>go get</code>获取到，或者说是我们想要在官方的依赖库中集成一些我们自己的功能，这时我们就需要使用<code>go modules</code>的<code>replace</code>功能了<br><code>replace</code>顾名思义，就是用新的<code>package</code>去替换另一个<code>package</code>，他们可以是不同的<code>package</code>，也可以是同一个<code>package</code>的不同版本。看一下基本的语法：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">go</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> mod</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> edit</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -replace=old[@v]=new[@v]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><code>old</code>是要被替换的package，<code>new</code>就是用于替换的package。</p><p>replace的使用步骤：</p><ol><li>首先<code>go get new-package</code>（如果你知道package的版本tag，那么这一步其实可以省略，如果想使用最新的版本而不想确认版本号，则需要这一步）</li><li>然后查看<code>go.mod</code>，手动复制<code>new-package</code>的版本号（如果你知道版本号，则跳过）</li><li><code>go mod edit -replace=old[@v]=new[@v]</code></li><li>接着<code>go mod tidy</code>或者<code>go build</code>或者使用其他的<code>go tools</code>，他们会去获取<code>new-package</code>然后替换掉<code>old-package</code></li><li>最后，在你的代码里直接使用<code>old-package</code>的名字，golang会自动识别出<code>replace</code>，然后实际你的程序将会使用<code>new-package</code>，替换成功</li></ol><h3 id="exclude" tabindex="-1"><a class="header-anchor" href="#exclude"><span>exclude</span></a></h3><p>这个特性是在Go1.16版本中引入，用来声明该第三方模块的某些发行版本不能被其他模块使用；<br> 使用场景：发生严重问题或者无意发布某些版本后，模块的维护者可以撤回该版本，支持撤回单个或多个版本；<br> 这种场景以前的解决办法：<br> 维护者删除有问题版本的<code>tag</code>，重新打一个新版本的<code>tag</code>；<br> 使用者发现有问题的版本<code>tag</code>丢失，手动介入升级，并且不明真因；<br> 引入<code>retract</code>后，维护者可以使用<code>retract</code>在<code>go.mod</code>中添加有问题的版本：</p><div class="language-go line-numbers-mode" data-highlighter="shiki" data-ext="go" data-title="go" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 严重bug...</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">retract</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  v0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1.0</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  v0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">2.0</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>重新发布新版本后，在引用该依赖库的使用执行<code>go list</code>可以看到 版本和&quot;严重bug...&quot;的提醒。该特性的主要目的是将问题更直观的反馈到开发者的手中；</p><h3 id="go-sum文件" tabindex="-1"><a class="header-anchor" href="#go-sum文件"><span>go.sum文件</span></a></h3><p>Go 在做依赖管理时会创建两个文件，<code>go.mod</code> 和 <code>go.sum</code>，<code>go.mod</code> 的重要性不言而喻，这个文件几乎提供了依赖版本的全部信息。而 <code>go.sum</code> 则是记录了所有依赖的 module 的校验信息，以防下载的依赖被恶意篡改，主要用于安全校验。这个文件我们一般不需要编辑，更新以来的时候会自动更新。<br> 每行的格式如下：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>&lt;module&gt; &lt;version&gt; &lt;hash&gt;</span></span>
<span class="line"><span>&lt;module&gt; &lt;version&gt;/go.mod &lt;hash&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>比如：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>github.com/spf13/cast v1.4.1 h1:s0hze+J0196ZfEMTs80N7UlFt0BDuQ7Q+JDnHiMWKdA=</span></span>
<span class="line"><span>github.com/spf13/cast v1.4.1/go.mod h1:Qx5cxh0v+4UWYiBimWS+eyWzqEqokIECu5etghLkUJE=</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>其中 <code>module</code> 是依赖的路径，<code>version</code> 是依赖的版本号。如果 <code>version</code> 后面跟 <code>/go.mod</code> 表示对哈希值是 <code>module</code> 的 <code>go.mod</code> 文件；否则，哈希值是 <code>module</code> 的 <code>.zip</code> 文件。<br><code>hash</code> 是以 <code>h1:</code> 开头的字符串，表示生成 checksum 的算法是第一版的HASH算法（SHA256）。如果将来在SHA-256中发现漏洞，将添加对另一种算法的支持，可能会命名为<code>h2</code>。</p><h2 id="go-modules使用" tabindex="-1"><a class="header-anchor" href="#go-modules使用"><span>Go Modules使用</span></a></h2><p>使用 <code>go modules</code> 的一个前置条件是Go语言版本大于等于Go1.11；然后我们要检查环境变量 <code>GO111MODULE</code> 是否开启，执行 <code>go env</code> 查看：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">go</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> env</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">grep</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> GO111MODULE</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">GO111MODULE</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;on&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>如果GO111MODULE=off，可以执行一下命令打开</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">go</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> env</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -w</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> GO111MODULE=on</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>接下来就可以使用GO MODULE管理项目工程了，先创建一个项目目录</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">mkdir</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -p</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> go_tour/main</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">cd</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> go_tour</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>执行：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">go</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> mod</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> init</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> go_tour</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>运行结果 ：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>go: creating new go.mod: module go_tour</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>会在go_tour目录下生成一个go.mod文件。在main包下建立main.go文件</p><div class="language-go line-numbers-mode" data-highlighter="shiki" data-ext="go" data-title="go" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">package</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> main</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;github.com/tidwall/gjson&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">const</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> json</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> \`{&quot;name&quot;:{&quot;hello&quot;:&quot;golang&quot;,&quot;key1&quot;:&quot;value1&quot;},&quot;id&quot;:12345}\`</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">func</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> main</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">() {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    value</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;"> :=</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> gjson</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Get</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">json</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;name.key1&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    println</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">value</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">String</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">())</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后在 <code>go_tour</code> 目录下执行 <code>go mod tidy</code> 命令，可以看到：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>go: finding module for package github.com/tidwall/gjson</span></span>
<span class="line"><span>go: downloading github.com/tidwall/gjson v1.14.4</span></span>
<span class="line"><span>go: found github.com/tidwall/gjson in github.com/tidwall/gjson v1.14.4</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>可以看到此时的go.mod文件内容：</p><div class="language-go line-numbers-mode" data-highlighter="shiki" data-ext="go" data-title="go" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">module</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> go_tour</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">go</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1.17</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">require</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> github</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">com</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">tidwall</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">gjson</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> v1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">14.4</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">require</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">   github</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">com</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">tidwall</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">match</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> v1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1.1</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> // indirect</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">   github</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">com</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">tidwall</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">pretty</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> v1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">2.0</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> // indirect</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>依赖已经安装好，并且可以使用了，在 <code>go.mod</code> 下还可以看到一个 <code>go.sum</code> 文件对依赖包的校验，<code>go.sum</code> 我们一般不用管</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>github.com/tidwall/gjson v1.14.4 h1:uo0p8EbA09J7RQaflQ1aBRffTR7xedD2bcIVSYxLnkM=</span></span>
<span class="line"><span>github.com/tidwall/gjson v1.14.4/go.mod h1:/wbyibRr2FHMks5tjHJ5F8dMZh3AcwJEMf5vlfC0lxk=</span></span>
<span class="line"><span>github.com/tidwall/match v1.1.1 h1:+Ho715JplO36QYgwN9PGYNhgZvoUSc9X2c80KVTi+GA=</span></span>
<span class="line"><span>github.com/tidwall/match v1.1.1/go.mod h1:eRSPERbgtNPcGhD8UCthc6PmLEQXEWd3PRB5JTxsfmM=</span></span>
<span class="line"><span>github.com/tidwall/pretty v1.2.0 h1:RWIZEg2iJ8/g6fDDYzMpobmaoGh5OLl4AXtGUGPcqCs=</span></span>
<span class="line"><span>github.com/tidwall/pretty v1.2.0/go.mod h1:ITEVvHYasfjBbM0u2Pg8T2nJnzm8xPwvNhhsoaGGjNU=</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>此时执行 <code>go run main.go</code> 就可以看到执行结果了</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>value1</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>以上就是用<code>go module</code>管理依赖库的简单用法。</p>`,104)]))}const p=s(l,[["render",h],["__file","Go语言依赖管理.html.vue"]]),r=JSON.parse('{"path":"/Go%E8%AF%AD%E8%A8%80%E7%B3%BB%E5%88%97/Go%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/Go%E8%AF%AD%E8%A8%80%E4%BE%9D%E8%B5%96%E7%AE%A1%E7%90%86.html","title":"Go语言依赖管理","lang":"zh-CN","frontmatter":{"tags":["Go","golang","go基础语法","modules","go modules","依赖管理"],"description":"Go语言依赖管理 在工程代码中，每种语言基本上都有自己的依赖管理工具，比如python的pip、node.js的npm，java的maven，rust的cargo，Go语言也有提供自己的依赖库管理工具。Go语言从v1.5开始开始引入vendor模式，如果项目目录下有vendor目录，那么go工具链会优先使用vendor内的包进行编译、测试等。在go1....","head":[["meta",{"property":"og:url","content":"https://xiucaistack.cn/Go%E8%AF%AD%E8%A8%80%E7%B3%BB%E5%88%97/Go%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/Go%E8%AF%AD%E8%A8%80%E4%BE%9D%E8%B5%96%E7%AE%A1%E7%90%86.html"}],["meta",{"property":"og:site_name","content":"秀才的进阶之路"}],["meta",{"property":"og:title","content":"Go语言依赖管理"}],["meta",{"property":"og:description","content":"Go语言依赖管理 在工程代码中，每种语言基本上都有自己的依赖管理工具，比如python的pip、node.js的npm，java的maven，rust的cargo，Go语言也有提供自己的依赖库管理工具。Go语言从v1.5开始开始引入vendor模式，如果项目目录下有vendor目录，那么go工具链会优先使用vendor内的包进行编译、测试等。在go1...."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-02-13T16:50:20.000Z"}],["meta",{"property":"article:tag","content":"Go"}],["meta",{"property":"article:tag","content":"golang"}],["meta",{"property":"article:tag","content":"go基础语法"}],["meta",{"property":"article:tag","content":"modules"}],["meta",{"property":"article:tag","content":"go modules"}],["meta",{"property":"article:tag","content":"依赖管理"}],["meta",{"property":"article:modified_time","content":"2025-02-13T16:50:20.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Go语言依赖管理\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-02-13T16:50:20.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"秀才\\",\\"url\\":\\"https://github.com/Percygu\\"}]}"]]},"headers":[{"level":2,"title":"Go Modules要点","slug":"go-modules要点","link":"#go-modules要点","children":[{"level":3,"title":"GO111MODULE环境变量","slug":"go111module环境变量","link":"#go111module环境变量","children":[]},{"level":3,"title":"GOPROXY","slug":"goproxy","link":"#goproxy","children":[]},{"level":3,"title":"GOSUMDB","slug":"gosumdb","link":"#gosumdb","children":[]},{"level":3,"title":"GONOPROXY/GONOSUMDB/GOPRIVATE","slug":"gonoproxy-gonosumdb-goprivate","link":"#gonoproxy-gonosumdb-goprivate","children":[]},{"level":3,"title":"全局缓存","slug":"全局缓存","link":"#全局缓存","children":[]}]},{"level":2,"title":"Go Modules命令","slug":"go-modules命令","link":"#go-modules命令","children":[{"level":3,"title":"go.mod文件","slug":"go-mod文件","link":"#go-mod文件","children":[]},{"level":3,"title":"module","slug":"module","link":"#module","children":[]},{"level":3,"title":"go version","slug":"go-version","link":"#go-version","children":[]},{"level":3,"title":"require","slug":"require","link":"#require","children":[]},{"level":3,"title":"replace","slug":"replace","link":"#replace","children":[]},{"level":3,"title":"exclude","slug":"exclude","link":"#exclude","children":[]},{"level":3,"title":"go.sum文件","slug":"go-sum文件","link":"#go-sum文件","children":[]}]},{"level":2,"title":"Go Modules使用","slug":"go-modules使用","link":"#go-modules使用","children":[]}],"git":{"createdTime":1739465420000,"updatedTime":1739465420000,"contributors":[{"name":"gupeng","username":"gupeng","email":"380059082@qq.com","commits":1,"url":"https://github.com/gupeng"}]},"readingTime":{"minutes":12.82,"words":3846},"filePathRelative":"Go语言系列/Go语言基础/Go语言依赖管理.md","localizedDate":"2025年2月14日","autoDesc":true}');export{p as comp,r as data};
